files:
  # Define nodejs
  "/etc/nginx/conf.d/upstream.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      # Define nodejs
      upstream nodejs {
        server 127.0.0.1:8081;
        keepalive 256;
      }

  # Serve /.well-known/acme-challenge
  # Redirect other traffic to https
  "/etc/nginx/conf.d/http.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;

        # Some fancy logging lifted directly from 00_elastic_beanstalk_proxy.conf
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }

        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log /var/log/nginx/access.log main;

        # Redirect all requests to https.
        location / {
          return 301  https://$host$request_uri;
        }

        # Except certbot's acme-challenge, which we might need to get without a valid certificate!
        # (If it expired, or if we are booting an instance for the first time.)
        location /.well-known/acme-challenge/ {
          root /var/www/;
        }

        # Gzipping lifted directly from 00_elastic_beanstalk_proxy.conf
        gzip on;
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

  # SSL config to deploy after certification
  "/etc/nginx/conf.d/https.pre":
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server
      server {
        listen       443 default ssl;
        server_name  localhost;
        error_page   497 https://$host$request_uri;

        # Serve SSL
        ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;
        ssl_session_timeout  5m;
        ssl_protocols  TLSv1.1 TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers   on;
        ssl_dhparam /etc/letsencrypt/live/ebcert/dhparam.pem;
        if ($ssl_protocol = "") {
          rewrite ^ https://$host$request_uri? permanent;
        }

        # Take it away, nodejs!
        location / {
          proxy_pass  http://nodejs;
          proxy_set_header   Connection "";
          proxy_http_version 1.1;
          proxy_set_header        Host            $host;
          proxy_set_header        X-Real-IP       $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header        Upgrade         $http_upgrade;
          proxy_set_header        Connection      "Upgrade";
        }

        # Serve certbot's acme-challenge for certifiate renewal.
        location /.well-known/acme-challenge/ {
          root /var/www/;
        }
      }
